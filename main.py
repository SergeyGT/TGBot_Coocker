import telebot
from telebot import types
import requests
import json

bot = telebot.TeleBot('6960208989:AAHlBJpA0-5xwJIWJv5tamJjofDlyRwfgWs')
weather_API = 'd26cd5944a376e41b3b56cab18208c18'
edamam_key = '4e1ae2986b7c7d4c71f2db5ef1e37ba0'
edamam_id = '58ee370c'

weather_descriptions = {
    "clear sky": "–Ø—Å–Ω–æ–µ –Ω–µ–±–æ",
    "few clouds": "–ú–∞–ª–æ–æ–±–ª–∞—á–Ω–æ",
    "scattered clouds": "–†–∞—Å—Å–µ—è–Ω–Ω—ã–µ –æ–±–ª–∞–∫–∞",
    "broken clouds": "–û–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏",
    "shower rain": "–õ–∏–≤–µ–Ω—å",
    "rain": "–î–æ–∂–¥—å",
    "thunderstorm": "–ì—Ä–æ–∑–∞",
    "snow": "–°–Ω–µ–≥",
    "mist": "–¢—É–º–∞–Ω",
}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    # # –ü–æ–ª–µ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    # markup = types.ReplyKeyboardMarkup()
    #
    # # –ö–Ω–æ–ø–∫–∏
    # btn1 = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã')
    # btn2 = types.KeyboardButton('–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∏–∑ –º–æ–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤')
    # btn3 = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É')
    # markup.row(btn1, btn3)
    # markup.row(btn2)

    # –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} {message.from_user.last_name}\n–ì–æ—Ç–æ–≤—ã —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –≤–∫—É—Å–Ω–µ–Ω—å–∫–æ–µ? üòã\n–ü–æ—Å–º–æ—Ç—Ä–∏–º –ø–æ–≥–æ–¥—É –∏–ª–∏ —Ä–µ—Ü–µ–ø—Ç—ã?')
                     # , reply_markup=markup)


@bot.message_handler(commands=["weather"])
def get_weather(message):
    bot.send_message(message.chat.id, "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ç—ã —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—à—å—Å—è:")
    bot.register_next_step_handler(message, weather_city)


def weather_city(message):
    city = message.text.strip().lower()
    res_weather = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={weather_API}&units=metric')
    if res_weather.status_code == 200:
        data = json.loads(res_weather.text)
        temp_grad = data["main"]["temp"]
        temp_osh = data["main"]["feels_like"]
        weather_description_en = data["weather"][0]["description"]
        # –ü–µ—Ä–µ–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–≥–æ–¥—ã
        weather_description_ru = weather_descriptions.get(weather_description_en, weather_description_en)
        caption = (f'–ü–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å: {temp_grad}¬∞C. –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {temp_osh}¬∞C. {weather_description_ru}')

        image = 'cloudy.png' if temp_grad > 25.0 else 'rainy.png'
        file = open('./' + image, 'rb')
        bot.send_photo(message.chat.id, file, caption=caption)
    else:
        bot.reply_to(message.chat.id, "–ì–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ")

@bot.message_handler(commands=['help'])
def send_help(message):
    bot.send_message(message.chat.id, """<em>/start - —Å—Ç–∞—Ä—Ç —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞</em>
<em>–†–µ—Ü–µ–ø—Ç—ã - —Ä–µ—Ü–µ–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏</em>""", parse_mode='html')


@bot.message_handler(commands=['recipe'])
def get_recipe(message):
    bot.send_message(message.chat.id, '–î–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º, –∫–∞–∫–æ–π —Ä–µ—Ü–µ–ø—Ç —Ç–µ–±–µ –Ω—É–∂–µ–Ω: ')
    bot.register_next_step_handler(message, show_recepies)

def show_recepies(message):
    message_list = message.text.strip().lower()
    url_edamam = f'https://api.edamam.com/search?q={message_list}&app_id={edamam_id}&app_key={edamam_key}'
    res_url_edamam = requests.get(url_edamam)
    if res_url_edamam.status_code == 200:
         data_recipe = json.loads(res_url_edamam.text)
         for hit in data_recipe["hits"][:5]:
             recipe_label = hit["recipe"]["label"]
             recipe_url = hit["recipe"]["url"]
             recipe_calories = hit["recipe"]["calories"]
             ingredients = '\n'.join(hit["recipe"]['ingredientLines'])
             bot.send_message(message.chat.id, f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞/–Ω–∞–ø–∏—Ç–∫–∞ - {recipe_label}</b>.\n–ö–æ–ª-–≤–æ –∫–∞–ª–æ—Ä–∏–π - {recipe_calories}\n"
                                               f"<em>–ò–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç—ã –±–ª—é–¥–∞/–Ω–∞–ø–∏—Ç–∫–∞:\n{ingredients}.</em>\n–°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ—Ü–µ–ø—Ç - {recipe_url}\n", parse_mode="html")
    else:
        bot.send_message(message.chat.id, "–†–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")




@bot.message_handler()
def core(message):
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç –µ—â–µ —Ä–∞–∑, –¥—Ä—É–≥!\n–ì–æ—Ç–æ–≤ —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –≤–∫—É—Å–Ω–µ–Ω—å–∫–æ–µ? üòã\n–ü–æ—Å–º–æ—Ç—Ä–∏–º –ø–æ–≥–æ–¥—É, —Ä–µ—Ü–µ–ø—Ç—ã? –ù–∞–ø–∏—à–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ:')


bot.polling(none_stop=True)
